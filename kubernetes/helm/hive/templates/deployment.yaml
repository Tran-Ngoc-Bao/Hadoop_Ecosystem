apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hiveMetastore.name" . }}
  labels:
    app.kubernetes.io/name: {{ template "hiveMetastore.name" . }}
    app.kubernetes.io/component: server
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "hiveMetastore.name" . }}
      app.kubernetes.io/component: server
      helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ template "hiveMetastore.name" . }}
        app.kubernetes.io/component: server
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hiveMetastore.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-config
        image: cirocosta/alpine-envsubst
        command: ["sh", "-c", "cat /metastore-site.xml.template | envsubst > /conf/metastore-site.xml"]
        env:
          - name: REMOTE_METASTORE_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.remoteMetastore.existingSecret }}
                key: REMOTE_METASTORE_USERNAME
          - name: REMOTE_METASTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.remoteMetastore.existingSecret }}
                key: REMOTE_METASTORE_PASSWORD
          - name: AWS_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.warehouse.existingSecret }}
                key: AWS_ACCESS_KEY
          - name: AWS_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.warehouse.existingSecret }}
                key: AWS_SECRET_KEY
        volumeMounts:
          - name: config-templates
            mountPath: /metastore-site.xml.template
            subPath: metastore-site.xml.template
          - name: config-dir
            mountPath: /conf/
      containers:
        - name: hive-metastore-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "hiveMetastoreImage" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c", "/opt/hive-metastore/bin/start-metastore"]
          ports:
            - name: thrift
              containerPort: 9083
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9083
          readinessProbe:
            tcpSocket:
              port: 9083
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-dir
              mountPath: /opt/hive-metastore/conf/
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-templates
          configMap:
            name: {{ template "hiveMetastore.name" . }}
        - name: config-dir
          emptyDir: {}