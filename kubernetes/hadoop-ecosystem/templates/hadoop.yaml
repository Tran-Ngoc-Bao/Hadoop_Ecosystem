apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: namenode
  name: namenode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: namenode
  template:
    metadata:
      labels:
        app: namenode
    spec:
      containers:
        - name: namenode
          image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
          env:
            - name: CLUSTER_NAME
              value: hadoop
          ports:
            - containerPort: 9870
              protocol: TCP
            - containerPort: 9000
              protocol: TCP
          volumeMounts:
            - mountPath: /hadoop/dfs/name
              name: hadoop-namenode
      restartPolicy: Always
      volumes:
        - name: hadoop-namenode
          persistentVolumeClaim:
            claimName: hadoop-namenode
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: datanode1
  name: datanode1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datanode1
  template:
    metadata:
      labels:
        app: datanode1
    spec:
      containers:
        - name: datanode1
          image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
          volumeMounts:
            - mountPath: /hadoop/dfs/data
              name: hadoop-datanode1
      restartPolicy: Always
      volumes:
        - name: hadoop-datanode1
          persistentVolumeClaim:
            claimName: hadoop-datanode1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: datanode2
  name: datanode2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datanode2
  template:
    metadata:
      labels:
        app: datanode2
    spec:
      containers:
        - name: datanode2
          image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
          volumeMounts:
            - mountPath: /hadoop/dfs/data
              name: hadoop-datanode2
      restartPolicy: Always
      volumes:
        - name: hadoop-datanode2
          persistentVolumeClaim:
            claimName: hadoop-datanode2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: datanode3
  name: datanode3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datanode3
  template:
    metadata:
      labels:
        app: datanode3
    spec:
      containers:
        - name: datanode3
          image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
          volumeMounts:
            - mountPath: /hadoop/dfs/data
              name: hadoop-datanode3
      restartPolicy: Always
      volumes:
        - name: hadoop-datanode3
          persistentVolumeClaim:
            claimName: hadoop-datanode3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: resourcemanager
  name: resourcemanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resourcemanager
  template:
    metadata:
      labels:
        app: resourcemanager
    spec:
      containers:
        - name: resourcemanager
          image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
          ports:
            - containerPort: 8088
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nodemanager1
  name: nodemanager1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodemanager1
  template:
    metadata:
      labels:
        app: nodemanager1
    spec:
      containers:
        - name: nodemanager1
          image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nodemanager2
  name: nodemanager2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodemanager2
  template:
    metadata:
      labels:
        app: nodemanager2
    spec:
      containers:
        - name: nodemanager2
          image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nodemanager3
  name: nodemanager3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodemanager3
  template:
    metadata:
      labels:
        app: nodemanager3
    spec:
      containers:
        - name: nodemanager3
          image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: historyserver
  name: historyserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: historyserver
  template:
    metadata:
      labels:
        app: historyserver
    spec:
      containers:
        - name: historyserver
          image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
          envFrom:
            - configMapRef:
                name: hadoop-config
          volumeMounts:
            - mountPath: /hadoop/yarn/timeline
              name: hadoop-historyserver
      restartPolicy: Always
      volumes:
        - name: hadoop-historyserver
          persistentVolumeClaim:
            claimName: hadoop-historyserver
